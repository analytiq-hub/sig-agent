services:
  frontend:
    image: analytiqhub/doc-router-frontend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend
      args:
        # Build-time environment
        - NEXT_PUBLIC_FASTAPI_FRONTEND_URL=${NEXT_PUBLIC_FASTAPI_FRONTEND_URL:-http://localhost:8000}
        - NODE_ENV=production
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - MONGODB_URI=${MONGODB_URI:-mongodb://YOUR_HOST_IP:27017}
      - FASTAPI_BACKEND_URL=${FASTAPI_BACKEND_URL:-http://localhost:8000}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default_secret_for_development}
      - AUTH_GITHUB_ID=${AUTH_GITHUB_ID}
      - AUTH_GITHUB_SECRET=${AUTH_GITHUB_SECRET}
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - NEXT_PUBLIC_FASTAPI_FRONTEND_URL=${NEXT_PUBLIC_FASTAPI_FRONTEND_URL:-http://localhost:8000}
    command: sh -c "cd /app/packages/typescript/frontend && npm run start"
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - doc-router-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    extra_hosts:
      - "host.docker.internal:host-gateway"

  backend:
    image: analytiqhub/doc-router-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - MONGODB_URI=${MONGODB_URI:-mongodb://YOUR_HOST_IP:27017}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default_secret_for_development}
      - FASTAPI_SECRET=${FASTAPI_SECRET:-${NEXTAUTH_SECRET}} # Obsolete, will be removed
      - FASTAPI_ROOT_PATH=${FASTAPI_ROOT_PATH:-/fastapi}
      - ADMIN_EMAIL=${ADMIN_EMAIL:-admin}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_S3_BUCKET_NAME=${AWS_S3_BUCKET_NAME}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - SES_FROM_EMAIL=${SES_FROM_EMAIL}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_PRODUCT_TAG=${STRIPE_PRODUCT_TAG}
    command: sh -c "cd /app/packages/python && uvicorn app.main:app --host 0.0.0.0 --port 8000"
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "4317:4317"
    networks:
      - doc-router-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    extra_hosts:
      - "host.docker.internal:host-gateway"

  worker:
    image: analytiqhub/doc-router-backend:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: backend
    environment:
      # Runtime environment
      - ENV=${ENV:-dev}
      - N_WORKERS=${N_WORKERS:-1}
      - MONGODB_URI=${MONGODB_URI:-mongodb://YOUR_HOST_IP:27017}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET:-default_nextauth_secret_for_development}
      - STRIPE_PRODUCT_TAG=${STRIPE_PRODUCT_TAG}
    command: sh -c "cd /app/packages/python/worker && python3 worker.py"
    restart: unless-stopped
    networks:
      - doc-router-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    extra_hosts:
      - "host.docker.internal:host-gateway"

networks:
  doc-router-network:
    driver: bridge